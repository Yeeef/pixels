package io.pixelsdb.pixels.cache;

import org.junit.Before;
import org.junit.Test;

import java.io.IOException;
import java.nio.ByteBuffer;
import java.nio.charset.StandardCharsets;

public class TestCacheContentReader {

    // TODO: scan all items, do a sanity check
    // the cache content can be generated by FakeCacheGenerator
    String cacheContentFile = "/mnt/nvme1n1/pixels.cache";

    @Before
    public void prepare ()
    {
        cacheContentFile = "/mnt/nvme1n1/pixels.cache";
    }

    @Test
    public void testDiskCacheContentReader() throws IOException, NoSuchFieldException, IllegalAccessException {
        CacheContentReader reader = new DiskCacheContentReader(cacheContentFile);

        // 40125714472, 4608
        // 4633903504, 4608
        PixelsCacheIdx idx = new PixelsCacheIdx(40125714472L, 4608);
        ByteBuffer buf = ByteBuffer.allocate(idx.length);
        buf.limit(idx.length);
        reader.read(idx, buf);
        System.out.println(StandardCharsets.UTF_8.decode(buf));
        buf.position(0);
        reader.read(new PixelsCacheIdx(4633903504L, 4608), buf);
        System.out.println(StandardCharsets.UTF_8.decode(buf));
    }
}
